
/* 2、选择器----------------------------------------------------------- */

/* CSS 元素选择器----------------------------------------------- */
p {
    text-align: center;
    color: red;
  }


/* CSS id 选择器----------------------------------------------- */
/* id="para1" 的 HTML 元素： */
#para1 {
text-align: center;
color: red;
}

/* CSS 类选择器------------------------------------------------ */
/* 在此例中，所有带有 class="center" 的 HTML 元素将为红色且居中对齐： */
.center {
    text-align: center;
    color: red;
  }

/* 在这个例子中，只有具有 class="center" 的 <p> 元素会居中对齐： */
p.center {
    text-align: center;
    color: red;
  }

/* 在这个例子中，<p> 元素将根据 class="center" 和 class="large" 进行样式设置： */
/* <p class="center large">这个段落引用两个类。</p> */


/* CSS 通用选择器--------------------------------------------- */
/* 下面的 CSS 规则会影响页面上的每个 HTML 元素： */
* {
    text-align: center;
    color: blue;
  }

/* CSS 分组选择器--------------------------------------------- */
/* 在这个例子中，对所有h1,h2,p 元素生效： */
h1, h2, p {
    text-align: center;
    color: red;
  }

/* CSS 属性选择器--------------------------------------------- */

/* 如果您希望把包含标题（title）的所有元素变为红色，可以写作： */
*[title] {color:red;}

/* 与上面类似，可以只对有 href 属性的锚（a 元素）应用样式： */
a[href] {color:red;}

/* 还可以根据多个属性进行选择，只需将属性选择器链接在一起即可 */
/* 例如，为了将同时有 href 和 title 属性的 HTML 超链接的文本设置为红色，可以这样写： */
a[href][title] {color:red;}

/* 可以采用一些创造性的方法使用这个特性。 */
/* 例如，可以对所有带有 alt 属性的图像应用样式，从而突出显示这些有效的图像： */
img[alt] {border: 5px solid red;}


/* 根据具体属性值选择 */
/* 除了选择拥有某些属性的元素，还可以进一步缩小选择范围，只选择有特定属性值的元素。 */
/* 例如，假设希望将指向 Web 服务器上某个指定文档的超链接变成红色，可以这样写： */
a[href="http://www.w3school.com.cn/about_us.asp"] {color: red;}

/* 与简单属性选择器类似，可以把多个属性-值选择器链接在一起来选择一个文档。 */

a[href="http://www.w3school.com.cn/"][title="W3School"] {color: red;}
/* 这会把以下标记中的第一个超链接的文本变为红色，但是第二个或第三个链接不受影响： */
/* 
<a href="http://www.w3school.com.cn/" title="W3School">W3School</a>
<a href="http://www.w3school.com.cn/css/" title="CSS">CSS</a>
<a href="http://www.w3school.com.cn/html/" title="HTML">HTML</a>
 */
/* 以上属性与属性值必须完全匹配 */
/* 请注意，这种格式要求必须与属性值完全匹配。 */
/* 如果属性值包含用空格分隔的值列表，匹配就可能出问题。 */

/* 请考虑一下的标记片段： */
/* <p class="important warning">This paragraph is a very important warning.</p> */
/* 如果写成 p[class="important"]，那么这个规则不能匹配示例标记。 */
/* 要根据具体属性值来选择该元素，必须这样写： */
p[class="important warning"] {color: red;}

/* 根据部分属性值选择 */
/* 如果需要根据属性值中的词列表的某个词进行选择，则需要使用波浪号（~）。 */
/* 假设您想选择 class 属性中包含 important 的元素，可以用下面这个选择器做到这一点： */
p[class~="important"] {color: red;}
/* 如果忽略了波浪号，则说明需要完成完全值匹配。 */


/* 子串匹配属性选择器----------- */
/* 下面为您介绍一个更高级的选择器模块，它是 CSS2 完成之后发布的，其中包含了更多的部分值属性选择器。按照规范的说法，应该称之为“子串匹配属性选择器”。 */
/* 很多现代浏览器都支持这些选择器，包括 IE7。 */
/* 下表是对这些选择器的简单总结： */
/* 类型	            描述 */
/* [abc^="def"]	选择 abc 属性值以 "def" 开头的所有元素 */
/* [abc$="def"]	选择 abc 属性值以 "def" 结尾的所有元素 */
/* [abc*="def"]	选择 abc 属性值中包含子串 "def" 的所有元素 */
/* 可以想到，这些选择有很多用途。 */
/* 举例来说，如果希望对指向 W3School 的所有链接应用样式，不必为所有这些链接指定 class，再根据这个类编写样式，而只需编写以下规则： */
a[href*="w3school.com.cn"] {color: red;}
/* 提示：任何属性都可以使用这些选择器。 */

/* 特定属性选择类型----------- */
/* 最后为您介绍特定属性选择器。请看下面的例子： */
*[lang|="en"] {color: red;}
/* 上面这个规则会选择 lang 属性等于 en 或以 en- 开头的所有元素。因此，以下示例标记中的前三个元素将被选中，而不会选择后两个元素： */
/* 
<p lang="en">Hello!</p>
<p lang="en-us">Greetings!</p>
<p lang="en-au">G'day!</p>
<p lang="fr">Bonjour!</p>
<p lang="cy-en">Jrooana!</p>
 */

/* CSS 后代选择器------------------------------------------------------- */

/* 根据上下文选择元素 */
/* 我们可以定义后代选择器来创建一些规则，使这些规则在某些文档结构中起作用，而在另外一些结构中不起作用。 */
/* 举例来说，如果您希望只对 h1 元素中的 em 元素应用样式，可以这样写： */

h1 em {color:red;}
/* 上面这个规则会把作为 h1 元素后代的 em 元素的文本变为 红色。其他 em 文本（如段落或块引用中的 em）则不会被这个规则选中： */
/* 
<h1>This is a <em>important</em> heading</h1>
<p>This is a <em>important</em> paragraph.</p>
 */
/* 有关后代选择器有一个易被忽视的方面，即两个元素之间的层次间隔可以是无限的。 */
/* 例如，如果写作 ul em，这个语法就会选择从 ul 元素继承的所有 em 元素，而不论 em 的嵌套层次多深。 */


/* CSS 子元素选择器----------------------------------------------------- */
/* 与后代选择器相比，子元素选择器（Child selectors）只能选择作为某元素子元素的元素。 */

/* 选择子元素 */
/* 如果您不希望选择任意的后代元素，而是希望缩小范围，只选择某个元素的子元素，请使用子元素选择器（Child selector）。 */
/* 例如，如果您希望选择只作为 h1 元素子元素的 strong 元素，可以这样写： */

h1 > strong {color:red;}
/* 这个规则会把第一个 h1 下面的两个 strong 元素变为红色，但是第二个 h1 中的 strong 不受影响： */
/* 
<h1>This is <strong>very</strong> <strong>very</strong> important.</h1>
<h1>This is <em>really <strong>very</strong></em> important.</h1>
 */
/* 结合后代选择器和子选择器------------- */
/* 请看下面这个选择器： */
table.company td > p
/* 上面的选择器会选择作为 td 元素子元素的所有 p 元素，这个 td 元素本身从 table 元素继承，该 table 元素有一个包含 company 的 class 属性。 */


/* CSS 相邻兄弟选择器------------------------------------------------------ */

/* 选择相邻兄弟 */
/* 如果需要选择紧接在另一个元素后的元素，而且二者有相同的父元素，可以使用相邻兄弟选择器（Adjacent sibling selector）。 */
/* 例如，如果要增加紧接在 h1 元素后出现的段落的上边距，可以这样写： */
h1 + p {margin-top:50px;}
/* 这个选择器读作：“选择紧接在 h1 元素后出现的段落，h1 和 p 元素拥有共同的父元素”。 */

/* 结合其他选择器--------------- */
/* 相邻兄弟结合符还可以结合其他结合符： */
html > body table + ul {margin-top:20px;}
/* 这个选择器解释为：选择紧接在 table 元素后出现的所有兄弟 ul 元素，该 table 元素包含在一个 body 元素中，body 元素本身是 html 元素的子元素。 */













































