/* https://www.w3school.com.cn/css/css3_gradients.asp */
/* CSS 渐变 */
/* CSS 渐变使您可以显示两种或多种指定颜色之间的平滑过渡。 */

/* CSS 定义了两种渐变类型： */
/* 线性渐变（向下/向上/向左/向右/对角线） */
/* 径向渐变（由其中心定义） */


/* CSS 线性渐变 */
/* 如需创建线性渐变，您必须定义至少两个色标。色标是您要呈现平滑过渡的颜色。您还可以设置起点和方向（或角度）以及渐变效果。 */

/* 语法 */
/* background-image: linear-gradient(direction, color-stop1, color-stop2, ...); */
/* 线性渐变 - 从上到下（默认） */
/* 下面的例子显示了从顶部开始的线性渐变。它从红色开始，过渡到黄色： */
/* 实例 */
#grad {
  background-image: linear-gradient(red, yellow);
}


/* 线性渐变 - 从左到右 */
/* 下面的例子展示了从左开始的线性渐变。它从红色开始，过渡到黄色： */
/* 实例 */
#grad {
  background-image: linear-gradient(to right, red , yellow);
}


/* 线性渐变 - 对角线 */
/* 您可以通过指定水平和垂直起始位置来实现对角渐变。 */
/* 下面的例子展示了从左上角开始（到右下角）的线性渐变。它从红色开始，过渡到黄色： */
/* 实例 */
#grad {
  background-image: linear-gradient(to bottom right, red, yellow);
}


/* 使用角度 */
/* 如果希望对渐变角度做更多的控制，您可以定义一个角度，来取代预定义的方向（向下、向上、向右、向左、向右下等等）。值 0deg 等于向上（to top）。值 90deg 等于向右（to right）。值 180deg 等于向下（to bottom）。 */
/* 语法 */
/* background-image: linear-gradient(angle, color-stop1, color-stop2); */
/* 这个角度指定水平线和渐变线之间的角度。 */
/* 下面的例子展示了如何在线性渐变上使用角度： */
/* 实例 */
#grad {
  background-image: linear-gradient(-90deg, red, yellow);
}


/* 使用多个色标 */
/* 下面的例子展示了带有多个色标的线性渐变（从上到下）： */
/* 实例 */
#grad {
  background-image: linear-gradient(red, yellow, green);
}

/* 下面的例子展示了如何使用彩虹色和一些文本创建线性渐变（从左到右）： */
/* 实例 */
#grad {
  background-image: linear-gradient(to right, red,orange,yellow,green,blue,indigo,violet); 
}


/* 使用透明度 */
/* CSS 渐变还支持透明度，也可用于创建渐变效果。 */
/* 如需添加透明度，我们使用 rgba() 函数来定义色标。 rgba() 函数中的最后一个参数可以是 0 到 1 的值，它定义颜色的透明度：0 表示全透明，1 表示全彩色（无透明）。 */
/* 下面的例子展示了从左开始的线性渐变。它开始完全透明，然后过渡为全色红色： */
/* 实例 */
#grad {
  background-image: linear-gradient(to right, rgba(255,0,0,0), rgba(255,0,0,1));
}


/* 重复线性渐变 */
/* repeating-linear-gradient() 函数用于重复线性渐变： */
/* 实例 */
/* 重复的线性渐变： */
#grad {
  background-image: repeating-linear-gradient(red, yellow 10%, green 20%);
}



/* CSS 径向渐变 */
/* 径向渐变由其中心定义。 */
/* 如需创建径向渐变，您还必须定义至少两个色标。 */
/* 语法 */
/* background-image: radial-gradient(shape size at position, start-color, ..., last-color); */
/* 默认地，shape 为椭圆形，size 为最远角，position 为中心。 */

/* 径向渐变-均匀间隔的色标（默认） */
/* 下面的例子展示了带有均匀间隔的色标的径向渐变： */
/* 实例 */
#grad {
  background-image: radial-gradient(red, yellow, green);
}


/* 径向渐变-不同间距的色标 */
/* 下面的例子展示了一个径向渐变，其色标之间的间隔不同： */
/* 实例 */
#grad {
  background-image: radial-gradient(red 5%, yellow 15%, green 60%);
}


/* 设置形状 */
/* shape 参数定义形状。它可接受 circle 或 ellipse 值。默认值为 ellipse（椭圆）。 */
/* 下面的例子展示了一个圆形的径向渐变： */
/* 实例 */
#grad {
  background-image: radial-gradient(circle, red, yellow, green);
}


/* 使用大小不同的关键字 */
/* size 参数定义渐变的大小。它可接受四个值： */
closest-side
farthest-side
closest-corner
farthest-corner
/* 实例 */
/* 设置了不同 size 关键词的径向渐变： */
#grad1 {
  background-image: radial-gradient(closest-side at 60% 55%, red, yellow, black);
}
#grad2 {
  background-image: radial-gradient(farthest-side at 60% 55%, red, yellow, black);
}


/* 重复径向渐变 */
/* repeating-radial-gradient() 函数用于重复径向渐变： */
/* 实例 */
/* 重复的径向渐变： */
#grad {
  background-image: repeating-radial-gradient(red, yellow 10%, green 15%);
}